version: '3.8'

services:

  rabbitmq:
    image: rabbitmq:latest 
    hostname: 'rabbitmq'
    container_name: 'rabbitmq'
    ports:
        - 5672:5672   # normal communication
        - 15672:15672 # web interface
    networks:
      - backend       # connected networks

  psql:
    image: postgres
    container_name: 'postgres'
    hostname: 'postgres'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - ./_psql-init:/docker-entrypoint-initdb.d
    networks:
      backend:
        aliases:
          - psql
    
  apigateway:
    build:
      context: .
      dockerfile: ./ApiGateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    networks:
      - backend # connected networks

  tripservice:
    build:
      context: .
      dockerfile: ./TripService/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    networks:
      - backend # connected networks

  hotelservice:
    build:
      context: .
      dockerfile: ./HotelService/Dockerfile
    depends_on:
      - rabbitmq
      - psql
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    networks:
      - backend # connected networks

networks: # defining networks
  backend: {} # network for the rest of communication
